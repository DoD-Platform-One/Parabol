{{- if .Values.services.rethinkdb.backups.restore }}
apiVersion: batch/v1
kind: Job
metadata:
  name: rethinkdb-restore
spec:
  completions: 1
  parallelism: 1
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: rethinkdb-restore
          image: "{{ .Values.imageRegistry.host }}/{{ .Values.services.rethinkdb.image }}"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c"]
          args:
            - LATEST=$(ls -t ../backup | head -n1) && 
              echo "Restoring from /backup/${LATEST}" && 
              rethinkdb restore -c $RETHINKDB_HOST:$RETHINKDB_PORT ../backup/"$LATEST" && echo "Backup done"
          env:
          - name: RETHINKDB_HOST
            value: "rethinkdb-service.parabol.svc.cluster.local"
          - name: RETHINKDB_PORT
            value: "28015"
          volumeMounts:
          - name: rethinkdb-backup
            mountPath: /backup
      imagePullSecrets:
      - name: regcred
      volumes:
      - name: rethinkdb-backup
        persistentVolumeClaim:
          claimName: rethinkdb-backup
{{ end }}                    