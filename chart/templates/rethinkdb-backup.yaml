{{- if .Values.services.rethinkdb.backups.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: rethinkdb-backup
  namespace: parabol
spec:
  concurrencyPolicy: "Forbid"
  failedJobsHistoryLimit: 3
  schedule: "{{ .Values.services.rethinkdb.backups.schedule }}"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: rethinkdb
              image: "{{ .Values.imageRegistry.host }}/{{ .Values.services.rethinkdb.image }}"
              imagePullPolicy: IfNotPresent
              command:
                - /bin/sh
                - -c
              args:
              - export BACKUP_DATE=`date +"%Y%m%d-%H%M"` && 
                export BACKUP_FILENAME=$BACKUP_DATE-rethinkdb.tar.gz && 
                echo "Backing up in /backup/$BACKUP_FILENAME" && 
                rethinkdb dump -c $RETHINKDB_HOST:$RETHINKDB_PORT -f /backup/$BACKUP_FILENAME --temp-dir /backup/ && echo "Backup done"
              env:
                - name: RETHINKDB_HOST
                  value: "rethinkdb-service.parabol.svc.cluster.local"
                - name: RETHINKDB_PORT
                  value: "28015"
              volumeMounts:
              - name: rethinkdb-backup
                mountPath: /backup
          imagePullSecrets:
          - name: regcred      
          volumes:
          - name: rethinkdb-backup
            persistentVolumeClaim:
                claimName: rethinkdb-backup       
{{ end }}

        