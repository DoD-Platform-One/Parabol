imageRegistry:
  host: registry1.dso.mil

registryCredentials:
  username:
  password:

services:
  redis:
    image: ironbank/opensource/redis/redis6-alpine:6.2.13
    exporter: ironbank/bitnami/analytics/redis-exporter:v1.54.0
    localStorage:
      enabled: true
  rethinkdb:
    image: ironbank/opensource/rethinkdb/rethinkdb:2.4.1

  postgres:
    image: ironbank/opensource/postgres/postgresql:15.4
    exporter: ironbank/opensource/prometheus/postgres-exporter:v0.13.2
    localStorage:
      enabled: true
      volumeSize: 10Gi
    backups:
      enabled: true
      schedule: 0 2 * * *

  parabol:
    image: ironbank/parabol/parabol:6.124.0
    env:
      redisHost: "redis-service"
      rethinkdbHost: "rethinkdb-service"
      postgresHost: "postgres-service"
    ports:
      internal: 3000
      external: 80

database:
  env:
    # postgresDb: Name of the PostgreSQL database.
    postgresDb: parabol

    # postgresUser: Username to access the PostgreSQL database.
    postgresUser: postgres

    # postgresHost: Internal hostname used to access the PostgreSQL database.
    postgresHost: postgres-service.parabol.svc.cluster.local

    # postgresPort: Port on which the PostgreSQL server is listening.
    postgresPort: 5432

    # postgresPassword: Password to access the PostgreSQL database.
    postgresPassword: parabol

ingress:
  enabled: true
  hostname: parabol.bigbang.dev

networkPolicies:
  enabled: false

parabolDeployment:
  env:
    # fileStoreProvider: Specifies the provider for file storage
    #                       - "local" means local file-based storage is used
    fileStoreProvider: local

    # port: The port on which the application will be exposed.
    port: 3000

    # host: The external hostname for Parabol application
    host: parabol.bigbang.dev

    # protocol: The protocol used by the server ("http" or "https").
    protocol: http

    # serverId: Identifier for the server (useful in scaled/multi-server environments).
    serverId: 1

    # serverSecret: The secret key used to generate JWT tokens
    serverSecret: QmtzUGVRUXJSa1hoRHJ1Z3pRRGc1TncK

    # invitationShortlink: The base URL used to construct invitation shortlinks.
    invitationShortlink: parabol.bigbang.dev/invitation-link

    # redisURL: The URL used to access the Redis server.
    redisUrl: redis://redis-service.parabol.svc.cluster.local:6379

    # rethinkdbUrl: The URL used to access the RethinkDB server.
    rethinkdbUrl: rethinkdb://rethinkdb-service.parabol.svc.cluster.local:28015/actionDevelopment

    # authInternalDisabled: Flag indicating if internal username/password authentication is disabled ("true" or "false").
    authInternalDisabled: false

    # authGoogleDisabled: Flag indicating if Google authentication is disabled ("true" or "false").
    authGooleDisabled: false

    # authSsoDisabled: Flag indicating if Single Sign-On (SSO) authentication is disabled ("true" or "false").
    authSsoDisabled: false

  livenessProbe:
    []
    # initialDelaySeconds: 90
    # periodSeconds: 30
    # timeoutSeconds: 60
    # failureThreshold: 3
    # successThreshold: 1
    # httpGet:
    #   path: /manifest.json
    #   port: 3000
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
    httpGet:
      path: /manifest.json
      port: 3000

monitoring:
  enabled: true
  dashboards:
    namespace: monitoring
    label: grafana_dashboard

  redis:
    metricsPort: 9121

  postgres:
    metricsPort: 9187
    env:
      - name: DATA_SOURCE_NAME
        value: postgresql://postgres:parabol@localhost:5432/parabol?sslmode=disable
